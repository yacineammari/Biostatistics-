name = "Cases of HVA",#the name
guide = guide
)
#HVB MAP
ggplot(map_and_data ,aes(fill = HVB))+#passing our joined variable and choosing the filling
geom_sf(aes(geometry = geometry))+#giving the geometry form the variable
labs(
title= "Cases of HVB in algeria provinces"
,y=y
, x = x
,subtitle = subtitle
, caption = caption
)+ #lables
theme(legend.position = "bottom") +#the Guide
scale_fill_viridis(
option = "inferno",#the color to be used
direction = -1,#setting the highs to have the darker color
name = "Cases of HVB",#the name
guide = guide
)
#HVC MAP
ggplot(map_and_data ,aes(fill = HVC))+#passing our joined variable and choosing the filling
geom_sf(aes(geometry = geometry))+#giving the geometry form the variable
labs(
title= "Cases of HVC in algeria provinces"
,y=y
, x = x
,subtitle = subtitle
, caption = caption
)+ #lables
theme(legend.position = "bottom") +#the Guide
scale_fill_viridis(
option = "inferno",#the color to be used
direction = -1,#setting the highs to have the darker color
name = "Cases of HVC",#the name
guide = guide
)
#including the library
library(sf) #to deal with simple features maps
library(rgdal) # to read the map file
library(data.table) # to read the csv file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("dzaBound/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#matching data$Province to map$Province
dz_data <- dz_data[order(match(dz_data$Province,dz_map$nam)),]
#cleaning map
dz_map$FIRST_f_co <- NULL
dz_map$FIRST_f__1 <- NULL
dz_map$FIRST_coc <- NULL
dz_map$FIRST_soc <- NULL
#here we want custom values so we force them manual
bins <-c(0, 56, 112,168,224,228,336,392,448,504)
#function that calculate the colors density(shades) is should be noted that we have chosen 10 values because colorBin can't more then 11 shades
pal = colorBin("Reds", dz_data$total, bins=bins)
#creating the label
lables <- paste("<p ><b>","Province of ",dz_data$Province,"</b> </p>",
"<p> ","HVA cases: ",dz_data$HVA," </p>",
"<p> ","HVB cases: ",dz_data$HVB," </p>",
"<p> ","HVC cases: ",dz_data$HVC," </p>",
sep = "")
#building the map thing
web_map<- leaflet() %>% #contractor (%>% is magrittr pipe operator which make your code more readable )
addProviderTiles(providers$CartoDB.Positron) %>% #choosing the background map
setView(5,28,5,5) %>% #this values are manual set to make dz in the middle of the scan
addPolygons(data = dz_map,
stroke = TRUE,
weight = 1,
smoothFactor = 0.5,
color = "black",
fillOpacity = 0.8,
fillColor = pal(dz_data$total),
highlight = highlightOptions(
weight = 5,
color="#ffff05",
fillOpacity = 0.7,
bringToFront  = TRUE
),label = lapply(lables,HTML)) %>%
addLegend(pal = pal, values = bins, opacity = 0.7,position = "topright",title = "HV Totale caese")
web_map
#including the library
library(sf) #to deal with simple features maps
library(rgdal) # to read the map file
library(data.table) # to read the csv file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("dzaBound/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#matching data$Province to map$Province
dz_data <- dz_data[order(match(dz_data$Province,dz_map$nam)),]
#we creat a new row that we call total and that's what we gonna plot
dz_data$total <- colSums(dz_data)
#including the library
library(sf) #to deal with simple features maps
library(rgdal) # to read the map file
library(data.table) # to read the csv file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("dzaBound/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#matching data$Province to map$Province
dz_data <- dz_data[order(match(dz_data$Province,dz_map$nam)),]
#we creat a new row that we call total and that's what we gonna plot
dz_data$total <- colSums(dz_data$HVA,dz_data$HVB,dz_data$HVC)
#reading map
dz_map <- readOGR("dzaBound/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#matching data$Province to map$Province
dz_data <- dz_data[order(match(dz_data$Province,dz_map$nam)),]
#we creat a new row that we call total and that's what we gonna plot
dz_data$total <- c(dz_data$HVA+dz_data$HVB+dz_data$HVC)
View(dz_data)
#including the library
library(sf) #to deal with simple features maps
library(rgdal) # to read the map file
library(data.table) # to read the csv file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("dzaBound/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#matching data$Province to map$Province
dz_data <- dz_data[order(match(dz_data$Province,dz_map$nam)),]
#we creat a new row that we call total and that's what we gonna plot
dz_data$total <- c(dz_data$HVA+dz_data$HVB+dz_data$HVC)
#cleaning map
dz_map$FIRST_f_co <- NULL
dz_map$FIRST_f__1 <- NULL
dz_map$FIRST_coc <- NULL
dz_map$FIRST_soc <- NULL
#here we want custom values so we force them manual
bins <-c(0, 56, 112,168,224,228,336,392,448,504)
#function that calculate the colors density(shades) is should be noted that we have chosen 10 values because colorBin can't more then 11 shades
pal = colorBin("Reds", dz_data$total, bins=bins)
#creating the label
lables <- paste("<p ><b>","Province of ",dz_data$Province,"</b> </p>",
"<p> ","HVA cases: ",dz_data$HVA," </p>",
"<p> ","HVB cases: ",dz_data$HVB," </p>",
"<p> ","HVC cases: ",dz_data$HVC," </p>",
sep = "")
#building the map thing
web_map<- leaflet() %>% #contractor (%>% is magrittr pipe operator which make your code more readable )
addProviderTiles(providers$CartoDB.Positron) %>% #choosing the background map
setView(5,28,5,5) %>% #this values are manual set to make dz in the middle of the scan
addPolygons(data = dz_map,
stroke = TRUE,
weight = 1,
smoothFactor = 0.5,
color = "black",
fillOpacity = 0.8,
fillColor = pal(dz_data$total),
highlight = highlightOptions(
weight = 5,
color="#ffff05",
fillOpacity = 0.7,
bringToFront  = TRUE
),label = lapply(lables,HTML)) %>%
addLegend(pal = pal, values = bins, opacity = 0.7,position = "topright",title = "HV Totale caese")
web_map
#including the library
library(sf) #to deal with simple features maps
library(rgdal) # to read the map file
library(data.table) # to read the csv file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("dzaBound/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#matching data$Province to map$Province
dz_data <- dz_data[order(match(dz_data$Province,dz_map$nam)),]
#we creat a new row that we call total and that's what we gonna plot
dz_data$total <- c(dz_data$HVA+dz_data$HVB+dz_data$HVC)
#cleaning map
dz_map$FIRST_f_co <- NULL
dz_map$FIRST_f__1 <- NULL
dz_map$FIRST_coc <- NULL
dz_map$FIRST_soc <- NULL
#here we want custom values so we force them manual
bins <-c(0, 56, 112,168,224,228,336,392,448,504)
#function that calculate the colors density(shades) it should be noted that we have chosen 10 values because colorBin dosn'tallow more then 11 shades
pal = colorBin("Reds", dz_data$total, bins=bins)
#creating the label
lables <- paste("<p ><b>","Province of ",dz_data$Province,"</b> </p>",
"<p> ","HVA cases: ",dz_data$HVA," </p>",
"<p> ","HVB cases: ",dz_data$HVB," </p>",
"<p> ","HVC cases: ",dz_data$HVC," </p>",
sep = "")
#building the map thing
web_map<- leaflet() %>% #contractor (%>% is magrittr pipe operator which make your code more readable )
addProviderTiles(providers$CartoDB.Positron) %>% #choosing the background map
setView(5,28,5,5) %>% #this values are manual set to make dz in the middle of the scan
addPolygons(data = dz_map,
stroke = TRUE,
weight = 1,
smoothFactor = 0.5,
color = "black",
fillOpacity = 0.8,
fillColor = pal(dz_data$total),
highlight = highlightOptions(
weight = 5,
color="#ffff05",
fillOpacity = 0.7,
bringToFront  = TRUE
),label = lapply(lables,HTML)) %>%
addLegend(pal = pal, values = bins, opacity = 0.7,position = "topright",title = "HV Totale caese")
web_map
#including the library
library(sf) #to deal with simple features maps
library(rgdal) #to read the map file
library(data.table) #to deal with data frame when reading the cvs file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("map/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#including the library
library(sf) #to deal with simple features maps
library(rgdal) #to read the map file
library(data.table) #to deal with data frame when reading the cvs file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("map/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#including the library
library(sf) #to deal with simple features maps
library(ggplot2) #for plotting
library(viridisLite) #needed for viridis
library(viridis) #to change ggplot2 colors and theme
library(data.table) #to read the csv file
#reading the data
the_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#reading the map as table
the_map <- st_read('dzaBound/dzaBound.shp',stringsAsFactors =FALSE)
#cleaing the map tab
the_map[c("FIRST_f_co","FIRST_f__1","FIRST_coc","FIRST_soc")] <- list(NULL)
#joining the data and the map into one var for essayer use
map_and_data <- merge(the_data, the_map, by.x = 'Province',by.y = 'nam',sort=TRUE)
#adding the gray line of lon and lat and chaning the background color
theme_set( theme_bw()+
theme(panel.grid.major = element_line(color = gray(0.5)
, linetype = "dashed", size = 0.5)
, panel.background = element_rect(fill = "#f5f5f2"))
)
#custom guide
guide <- guide_colorbar(
direction = "horizontal",#direction
barheight = unit(3, units = "mm"),#tol
barwidth = unit(70, units = "mm"),#3ard
title.position = 'top',#put tittle in top
# some shifting around to be centerd
title.hjust = 0.5,
label.hjust = 0.5
)
#caption
caption <- "MAP :Algeria Political Boundaries  DATA:MS.Schehrazad Selmane  AUTHORS:Ammari Yacine AND Mlike Yanis Rekab"
#subtitle
subtitle <- "Based on the Data provide by MS.Schehrazad Selmane,2021 "
#x
x <-"Longitude"
#y
y<- "Latitude"
#HVA MAP
ggplot(map_and_data ,aes(fill = HVA))+#passing our joined variable and choosing the filling
geom_sf(aes(geometry = geometry))+#giving the geometry form the variable
labs(
title= "Cases of HVA in algeria provinces"
,y=y
, x = x
,subtitle = subtitle
, caption = caption
)+ #lables
theme(legend.position = "bottom") +#the Guide
scale_fill_viridis(
option = "inferno",#the color to be used
direction = -1,#setting the highs to have the darker color
name = "Cases of HVA",#the name
guide = guide
)
#WE DO THE SAME THING THE HVB AND HVC
#HVB MAP
ggplot(map_and_data ,aes(fill = HVB))+#passing our joined variable and choosing the filling
geom_sf(aes(geometry = geometry))+#giving the geometry form the variable
labs(
title= "Cases of HVB in algeria provinces"
,y=y
, x = x
,subtitle = subtitle
, caption = caption
)+ #lables
theme(legend.position = "bottom") +#the Guide
scale_fill_viridis(
option = "inferno",#the color to be used
direction = -1,#setting the highs to have the darker color
name = "Cases of HVB",#the name
guide = guide
)
#HVC MAP
ggplot(map_and_data ,aes(fill = HVC))+#passing our joined variable and choosing the filling
geom_sf(aes(geometry = geometry))+#giving the geometry form the variable
labs(
title= "Cases of HVC in algeria provinces"
,y=y
, x = x
,subtitle = subtitle
, caption = caption
)+ #lables
theme(legend.position = "bottom") +#the Guide
scale_fill_viridis(
option = "inferno",#the color to be used
direction = -1,#setting the highs to have the darker color
name = "Cases of HVC",#the name
guide = guide
)
#including the library
library(sf) #to deal with simple features maps
library(ggplot2) #for plotting
library(viridisLite) #needed for viridis
library(viridis) #to change ggplot2 colors and theme
library(data.table) #to read the csv file
#reading the data
the_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#reading the map as table
the_map <- st_read('dzaBound/dzaBound.shp',stringsAsFactors =FALSE)
#cleaing the map tab
the_map[c("FIRST_f_co","FIRST_f__1","FIRST_coc","FIRST_soc")] <- list(NULL)
#joining the data and the map into one var for essayer use
map_and_data <- merge(the_data, the_map, by.x = 'Province',by.y = 'nam',sort=TRUE)
#adding the gray line of lon and lat and chaning the background color
theme_set( theme_bw()+
theme(panel.grid.major = element_line(color = gray(0.5)
, linetype = "dashed", size = 0.5)
, panel.background = element_rect(fill = "#f5f5f2"))
)
#custom guide
guide <- guide_colorbar(
direction = "horizontal",#direction
barheight = unit(3, units = "mm"),#tol
barwidth = unit(70, units = "mm"),#3ard
title.position = 'top',#put tittle in top
# some shifting around to be centerd
title.hjust = 0.5,
label.hjust = 0.5
)
#caption
caption <- "MAP :Algeria Political Boundaries  DATA:MS.Schehrazad Selmane  AUTHORS:Ammari Yacine AND Mlike Yanis Rekab"
#subtitle
subtitle <- "Based on the Data provide by MS.Schehrazad Selmane,2021 "
#x
x <-"Longitude"
#y
y<- "Latitude"
#HVA MAP
ggplot(map_and_data ,aes(fill = HVA))+#passing our joined variable and choosing the filling
geom_sf(aes(geometry = geometry))+#giving the geometry form the variable
labs(
title= "Cases of HVA in algeria provinces"
,y=y
, x = x
,subtitle = subtitle
, caption = caption
)+ #lables
theme(legend.position = "bottom") +#the Guide
scale_fill_viridis(
option = "inferno",#the color to be used
direction = -1,#setting the highs to have the darker color
name = "Cases of HVA",#the name
guide = guide
)
#WE DO THE SAME THING THE HVB AND HVC
#HVB MAP
ggplot(map_and_data ,aes(fill = HVB))+#passing our joined variable and choosing the filling
geom_sf(aes(geometry = geometry))+#giving the geometry form the variable
labs(
title= "Cases of HVB in algeria provinces"
,y=y
, x = x
,subtitle = subtitle
, caption = caption
)+ #lables
theme(legend.position = "bottom") +#the Guide
scale_fill_viridis(
option = "inferno",#the color to be used
direction = -1,#setting the highs to have the darker color
name = "Cases of HVB",#the name
guide = guide
)
#HVC MAP
ggplot(map_and_data ,aes(fill = HVC))+#passing our joined variable and choosing the filling
geom_sf(aes(geometry = geometry))+#giving the geometry form the variable
labs(
title= "Cases of HVC in algeria provinces"
,y=y
, x = x
,subtitle = subtitle
, caption = caption
)+ #lables
theme(legend.position = "bottom") +#the Guide
scale_fill_viridis(
option = "inferno",#the color to be used
direction = -1,#setting the highs to have the darker color
name = "Cases of HVC",#the name
guide = guide
)
#including the library
library(sf) #to deal with simple features maps
library(rgdal) # to read the map file
library(data.table) # to read the csv file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("dzaBound/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#matching data$Province to map$Province
dz_data <- dz_data[order(match(dz_data$Province,dz_map$nam)),]
#we creat a new row that we call total and that's what we gonna plot
dz_data$total <- c(dz_data$HVA+dz_data$HVB+dz_data$HVC)
#cleaning map
dz_map$FIRST_f_co <- NULL
dz_map$FIRST_f__1 <- NULL
dz_map$FIRST_coc <- NULL
dz_map$FIRST_soc <- NULL
#here we want custom values so we force them manual
bins <-c(0, 56, 112,168,224,228,336,392,448,504)
#function that calculate the colors density(shades) it should be noted that we have chosen 10 values because colorBin dosn'tallow more then 11 shades
pal = colorBin("Reds", dz_data$total, bins=bins)
#creating the label
lables <- paste("<p ><b>","Province of ",dz_data$Province,"</b> </p>",
"<p> ","HVA cases: ",dz_data$HVA," </p>",
"<p> ","HVB cases: ",dz_data$HVB," </p>",
"<p> ","HVC cases: ",dz_data$HVC," </p>",
sep = "")
#building the map thing
web_map<- leaflet() %>% #contractor (%>% is magrittr pipe operator which make your code more readable )
addProviderTiles(providers$CartoDB.Positron) %>% #choosing the background map
setView(5,28,5,5) %>% #this values are manual set to make dz in the middle of the scan
addPolygons(data = dz_map,
stroke = TRUE,
weight = 1,
smoothFactor = 0.5,
color = "black",
fillOpacity = 0.8,
fillColor = pal(dz_data$total),
highlight = highlightOptions(
weight = 5,
color="#ffff05",
fillOpacity = 0.7,
bringToFront  = TRUE
),label = lapply(lables,HTML)) %>%
addLegend(pal = pal, values = bins, opacity = 0.7,position = "topright",title = "HV Totale caese")
web_map
#including the library
library(sf) #to deal with simple features maps
library(rgdal) # to read the map file
library(data.table) # to read the csv file
library(leaflet) # for plotting in web form
library(htmltools) # to pares html
#reading map
dz_map <- readOGR("dzaBound/dzaBound.shp")
#reading data
dz_data <- as.data.frame(fread(file="data.csv", header=TRUE))
#matching data$Province to map$Province
dz_data <- dz_data[order(match(dz_data$Province,dz_map$nam)),]
#we creat a new row that we call total and that's what we gonna plot
dz_data$total <- c(dz_data$HVA+dz_data$HVB+dz_data$HVC)
#cleaning map
dz_map$FIRST_f_co <- NULL
dz_map$FIRST_f__1 <- NULL
dz_map$FIRST_coc <- NULL
dz_map$FIRST_soc <- NULL
#here we want custom values so we force them manual
bins <-c(0, 56, 112,168,224,228,336,392,448,504)
#function that calculate the colors density(shades) it should be noted that we have chosen 10 values because colorBin dosn'tallow more then 11 shades
pal = colorBin("Reds", dz_data$total, bins=bins)
#creating the label
lables <- paste("<p ><b>","Province of ",dz_data$Province,"</b> </p>",
"<p> ","HVA cases: ",dz_data$HVA," </p>",
"<p> ","HVB cases: ",dz_data$HVB," </p>",
"<p> ","HVC cases: ",dz_data$HVC," </p>",
sep = "")
#building the map thing
web_map<- leaflet() %>% #contractor (%>% is magrittr pipe operator which make your code more readable )
addProviderTiles(providers$CartoDB.Positron) %>% #choosing the background map
setView(5,28,5,5) %>% #this values are manual set to make dz in the middle of the scan
addPolygons(data = dz_map,
stroke = TRUE,
weight = 1,
smoothFactor = 0.5,
color = "black",
fillOpacity = 0.8,
fillColor = pal(dz_data$total),
highlight = highlightOptions(
weight = 5,
color="#ffff05",
fillOpacity = 0.7,
bringToFront  = TRUE
),label = lapply(lables,HTML)) %>%
addLegend(pal = pal, values = bins, opacity = 0.7,position = "topright",title = "HV Totale caese")
web_map
